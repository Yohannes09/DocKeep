# Local infra for testing

services:

  dockeep-db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
#    volumes:
#      - dockeep-db-data:/var/lib/postgresql/data
#    networks:
#      - app-network
#      - dockeep-internal

  dockeep:
    container_name: dockeep
    build:
      context: .
      args:
        REPO_USERNAME: ${REPO_USERNAME}
        REPO_TOKEN: ${REPO_TOKEN}
    ports:
      - "${APP_PORT}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

      SPRING_DATASOURCE_URL: jdbc:postgresql://dockeep-db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      #SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 10
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 5
      SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: 300000
      SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: 1800000
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
    depends_on:
      dockeep-db:
        condition: service_healthy
#    networks:
#      - app-network
#      - dockeep-internal

  redis:
    container_name: redis
    restart: always
    image: redis:latest
##    networks:
##      - app-network
    ports:
      - "6379:6379"
#    volumes:
#      - redis-data:

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: unless-stopped
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 #://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
#    networks:
#      - app-network
    ports:
      - "9092:9092"
#    volumes:
#      - kafka-data:/bitnami/kafka

#volumes:
#  dockeep-db-data:
#  redis-data:
#  kafka-data:

#networks:
#  app-network:
#    external: true
#  dockeep-internal:
#    driver: bridge